apiVersion: v1
kind: Service
metadata:
  name: ops-svc
  labels:
    app: ops-svc
spec:
  ports:
    - port: 8080
      name: http
    - port: 8081
      name: websocket
  clusterIP: None
  selector:
    app: yx-ops
    
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ops-pvc
  annotations:
    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: yx-ops
  labels:
    app: yx-ops
  namespace: default
spec:
  # serviceName: ops-svc
  replicas: 1
  selector:
    matchLabels:
      app: yx-ops
  template:
    metadata:
      labels:
        app: yx-ops
    spec:
      containers:
        - name: ops
          image: k8s-repo.io/dms:0812.10
          imagePullPolicy: Always
          command:
            - "/bin/sh"
            - "docker-run.sh"
          readinessProbe:
            httpGet:
              port: http
              path: /index
          volumeMounts:
            - name: upload
              mountPath: /django-home/uploads
          ports:
            - name: http
              containerPort: 8080
            - name: websocket
              containerPort: 8081
      volumes:
        - name: upload
          persistentVolumeClaim:
            claimName: ops-pvc 
  # volumeClaimTemplates:
  #   - metadata:
  #       name: upload
  #       annotations:
  #         volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
  #     spec:
  #       accessModes:
  #         - ReadWriteMany
  #       resources:
  #         requests:
  #           storage: 1Gi

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ops-ingress
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    # change upload request max body size
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # config websocket
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";
spec:
  rules:
  - host: ops.cs.hnyongxiong.com
    http:
      paths:
      - path: /
        backend:
          serviceName: ops-svc
          servicePort: 8080
      - path: /webssh
        backend:
          serviceName: ops-svc
          servicePort: 8081
      - path: /webtelnet
        backend:
          serviceName: ops-svc
          servicePort: 8081